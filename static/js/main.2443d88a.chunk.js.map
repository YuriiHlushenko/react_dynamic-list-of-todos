{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","viewTodoId","onEyeClick","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","setOption","setQuery","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","viewTodo","onClose","useState","loading","setLoading","user","setUser","useEffect","userId","finally","href","email","name","App","setTodos","setViewTodoId","filter","setFilter","saveTodoId","visibleTodos","preparedTodos","toLowerCase","includes","getPreparedTodos","find","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2443d88a.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  viewTodoId: number | null;\n  onEyeClick: (id: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  viewTodoId,\n  onEyeClick,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={viewTodoId === todo.id\n            ? 'has-background-info-light'\n            : ''}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          {todo.completed\n            ? (\n              <>\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-success\">{todo.title}</p>\n                </td>\n              </>\n\n            )\n            : (\n              <>\n                <td className=\"is-vcentered\" />\n                <td className=\"is-vcentered is-expanded\">\n                  <p className=\"has-text-danger\">\n                    {todo.title}\n                  </p>\n                </td>\n              </>\n\n            )}\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onEyeClick(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={viewTodoId === todo.id\n                  ? 'far fa-eye-slash'\n                  : 'far fa-eye'}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  query: string;\n  setOption: (value: string) => void;\n  setQuery: (value: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setOption,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={event => {\n            setOption(event.target.value);\n          }}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => {\n          setQuery(event.target.value);\n        }}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  viewTodo: Todo | null;\n  onClose: (id: number | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  viewTodo,\n  onClose,\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getUser(viewTodo?.userId || 0)\n      .then(setUser)\n      .finally(() => setLoading(false));\n  }, [viewTodo]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${viewTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {viewTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {viewTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={user?.email}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nfunction getPreparedTodos(todos: Todo[], filter: string,\n  query: string): Todo[] {\n  const preparedTodos = todos.filter(todo => {\n    switch (filter) {\n      case 'completed':\n        return todo.completed;\n\n      case 'active':\n        return !todo.completed;\n\n      default:\n        return true;\n    }\n  });\n\n  if (query) {\n    return preparedTodos.filter(\n      todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n    );\n  }\n\n  return preparedTodos;\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [viewTodoId, setViewTodoId] = useState<number | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const saveTodoId = (id: number | null) => {\n    setViewTodoId(id);\n  };\n\n  const onChange = (e: string) => {\n    setFilter(e);\n  };\n\n  const onQueryChange = (e: string) => {\n    setQuery(e);\n  };\n\n  const visibleTodos = getPreparedTodos(todos, filter, query);\n\n  const viewTodo = todos.find(todo => todo.id === viewTodoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setOption={onChange}\n                setQuery={onQueryChange}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                viewTodoId={viewTodoId}\n                onEyeClick={saveTodoId}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {viewTodoId && (\n        <TodoModal\n          viewTodo={viewTodo || null}\n          onClose={saveTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}